{"ast":null,"code":"import { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AACA,SAASA,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAIA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADkB,CAAP,CAA9B;AAKP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA7C;AAOP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAGAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AAChC,YAAMZ,cAAc,GAAGP,+BAA+B,CAACmB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AAEH,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKH,GAXD;AAYH,CAbM","sourcesContent":["\r\nimport { convertCollectionsSnapshotToMap ,firestore } from \"../../firebase/firebase.utils\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\n\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n\r\n});\r\n\r\nexport const fetchCollectionSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure =  errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\n\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        dispatch(fetchCollectionsStart());\r\n\r\n\r\n        collectionRef.get().then(snapshot=> {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionSuccess(collectionsMap));\r\n            \r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}