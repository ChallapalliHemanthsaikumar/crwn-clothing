{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from 'redux-logger';\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nimport rootReducer from './root-reducer';\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/crwn-clothing/src/redux/store.js"],"names":["applyMiddleware","createStore","persistStore","createSagaMiddleware","logger","fetchCollectionsStart","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AACA,SAASA,eAAT,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AAEH;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcN,eAAe,CAAC,GAAGS,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AACA,OAAO,MAAMS,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["\r\nimport { applyMiddleware,createStore} from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport logger from 'redux-logger';\r\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from \"./root-saga\";\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif(process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga) \r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}