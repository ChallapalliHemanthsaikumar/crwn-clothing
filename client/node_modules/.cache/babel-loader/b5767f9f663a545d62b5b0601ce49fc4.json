{"ast":null,"code":"import { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Hired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //    collectionRef.get().then(snapshot=> {\n  //        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //        dispatch(fetchCollectionSuccess(collectionsMap));\n  //    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAoC,0BAApC;AAEA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACIC,sBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAOA,OAAO,UAAUC,qBAAV,GAAiC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAG;AAGH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAiCS,QAAjC,CAAhC;AACA,UAAMX,GAAG,CAACI,sBAAsB,CAACS,aAAD,CAAvB,CAAT;AACC,GATD,CASC,OAAMC,KAAN,EAAY;AACZ,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA,GAboC,CAexC;AACA;AACA;AAEA;;AACC;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,SAAS,CAACK,eAAe,CAACc,uBAAjB,EACfX,qBADe,CAAf;AAEH","sourcesContent":["import { takeEvery,call, put } from \"@redux-saga/core/effects\";\r\n\r\nimport { firestore,convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nimport {\r\n    fetchCollectionSuccess,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\n\r\n\r\nexport function* fetchCollectionsAsync(){\r\n   yield console.log(\"I am Hired\");\r\n   try{\r\n\r\n   \r\n   const collectionRef = firestore.collection('collections');\r\n\r\n   const snapshot = yield collectionRef.get();\r\n    \r\n   const collectionMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n   yield put(fetchCollectionSuccess(collectionMap));\r\n   }catch(error){\r\n    yield put(fetchCollectionsFailure(error.message))\r\n   }\r\n\r\n//    collectionRef.get().then(snapshot=> {\r\n//        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//        dispatch(fetchCollectionSuccess(collectionsMap));\r\n       \r\n//    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}