{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/hemanth/Desktop/e-commerce/some/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from\"@redux-saga/core/effects\";import{firestore,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";import ShopActionTypes from\"./shop.types\";import{fetchCollectionSuccess,fetchCollectionsFailure}from'./shop.actions';export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection('collections');_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionMap=_context.sent;_context.next=10;return put(fetchCollectionSuccess(collectionMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionsFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);};export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);};","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/some/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionSuccess","fetchCollectionsFailure","collectionRef","collection","get","snapshot","collectionMap","message","FETCH_COLLECTIONS_START"],"mappings":"6NAYiBA,qB,iDAsBAC,qB,iDAKAC,S,EAvCjB,OAASC,UAAT,CAAoBC,IAApB,CAA0BC,GAA1B,CAA8BC,GAA9B,KAAyC,0BAAzC,CAEA,OAASC,SAAT,CAAmBC,+BAAnB,KAA0D,+BAA1D,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CAEA,OACIC,sBADJ,CAEIC,uBAFJ,KAGO,gBAHP,CAOA,MAAO,SAAUX,CAAAA,qBAAV,0LAKEY,aALF,CAKkBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CALlB,iBAOa,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAPb,OAOEC,QAPF,+BASkB,MAAMX,CAAAA,IAAI,CAACI,+BAAD,CAAiCO,QAAjC,CAAV,CATlB,OASEC,aATF,gCAUJ,MAAMX,CAAAA,GAAG,CAACK,sBAAsB,CAACM,aAAD,CAAvB,CAAT,CAVI,0GAYH,MAAMX,CAAAA,GAAG,CAACM,uBAAuB,CAAC,YAAMM,OAAP,CAAxB,CAAT,CAZG,qEAsBP,MAAO,SAAUhB,CAAAA,qBAAV,qJACH,MAAME,CAAAA,UAAU,CAACM,eAAe,CAACS,uBAAjB,CAChBlB,qBADgB,CAAhB,CADG,wDAGN,CAED,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADG,wDAEN","sourcesContent":["import { takeLatest,call, put,all } from \"@redux-saga/core/effects\";\r\n\r\nimport { firestore,convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nimport {\r\n    fetchCollectionSuccess,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\n\r\n\r\nexport function* fetchCollectionsAsync(){\r\n  \r\n   try{\r\n\r\n   \r\n   const collectionRef = firestore.collection('collections');\r\n\r\n   const snapshot = yield collectionRef.get();\r\n    \r\n   const collectionMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n   yield put(fetchCollectionSuccess(collectionMap));\r\n   }catch(error){\r\n    yield put(fetchCollectionsFailure(error.message))\r\n   }\r\n\r\n//    collectionRef.get().then(snapshot=> {\r\n//        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//        dispatch(fetchCollectionSuccess(collectionsMap));\r\n       \r\n//    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync)\r\n};\r\n\r\nexport function* shopSagas(){\r\n    yield all([call(fetchCollectionsStart)])\r\n};"]},"metadata":{},"sourceType":"module"}