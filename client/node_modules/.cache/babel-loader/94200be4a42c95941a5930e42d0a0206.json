{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemanth\\\\Desktop\\\\e-commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnaoshotToMap } from '../../firebase/firebase.utils';\nimport CollectionPage from './collection/collection.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewwithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewwithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\nimport updateCollections from '../../redux/shop/shop.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnaoshotToMap(snapshot);\n      console.log(collectionMap);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewwithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","firestore","convertCollectionsSnaoshotToMap","CollectionPage","CollectionsOverview","withSpinner","CollectionsOverviewwithSpinner","CollectionPageWithSpinner","updateCollections","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","console","log","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAqBC,+BAArB,QAA4D,+BAA5D;AAEA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAAED,mBAAF,CAAlD;KAAME,8B;AAEN,MAAMC,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;MAAMI,yB;AAEN,OAAOC,iBAAP,MAA8B,+BAA9B;;;AACA,MAAOC,QAAP,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD4B;AAAA,SAKpCC,uBALoC,GAKV,IALU;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC1C,YAAMC,aAAa,GAAIlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAZ,MAAAA,iBAAiB,CAACY,aAAD,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAC;AAAV,OAAd;AAEA,KAND;AAQH;;AACDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AAEA,wBACJ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGX,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAK,GAAEU,KAAK,CAACC,IAAK,gBAA7B;AAA8C,QAAA,SAAS,EAAEvB;AAAzD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAQH;;AA/BmC;;AAiCxC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAEY,aAAa,IAAIQ,QAAQ,CAACpB,iBAAiB,CAACY,aAAD,CAAlB;AADR,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAM4B,kBAAN,CAAP,CAAiClB,QAAjC,CAAf","sourcesContent":["import React from  'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router-dom';\r\nimport { firestore , convertCollectionsSnaoshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport CollectionPage from './collection/collection.component';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewwithSpinner = withSpinner( CollectionsOverview);\r\n\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\nimport updateCollections from '../../redux/shop/shop.actions';\r\nclass  ShopPage extends React.Component { \r\n    state = {\r\n        loading: true,\r\n\r\n    };\r\n    unsubscribeFromSnapshot = null; \r\n\r\n    componentDidMount(){\r\n        const { updateCollections}  = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n         const collectionMap =  convertCollectionsSnaoshotToMap(snapshot)\r\n         console.log(collectionMap);\r\n         updateCollections(collectionMap);\r\n         this.setState({ loading:false});\r\n\r\n        });\r\n\r\n    }\r\n    render() { \r\n        const { loading } = this.state;\r\n        const { match } = this.props;\r\n\r\n        return (    \r\n    <div className='shop-page'>\r\n      \r\n        <Route exact path={`${match.path}`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\r\n        <Route path ={ `${match.path}/:collectionId`} component={CollectionPage}/>\r\n        \r\n        \r\n    </div>);\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\r\n})\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}