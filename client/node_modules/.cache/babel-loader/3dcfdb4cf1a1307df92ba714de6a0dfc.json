{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemanth\\\\Desktop\\\\e-commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { selectCollectionFetching } from '../../redux/shop/shop.selector';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionPage from './collection/collection.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewwithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewwithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewwithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewwithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","selectCollectionFetching","createStructuredSelector","fetchCollectionsStartAsync","CollectionPage","CollectionsOverview","withSpinner","CollectionsOverviewwithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA0C,+BAA1C;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAAED,mBAAF,CAAlD;KAAME,8B;AAEN,MAAMC,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;MAAMI,yB;;AAGN,MAAOC,QAAP,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AAGpCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAER,MAAAA;AAAF,QAAgC,KAAKS,KAA3C;AACAT,IAAAA,0BAA0B;AAG7B;;AACDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAAQC,MAAAA;AAAR,QAAiC,KAAKH,KAA5C;AAEA,wBACJ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAqEH;AAArE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAK,GAAEE,KAAK,CAACE,IAAK,gBAA7B;AAA8C,QAAA,MAAM,EAAGJ,KAAD,iBAAU,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAQH;;AApBmC;;AAuBxC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAAEd;AADuB,CAAD,CAAhD;;AAGA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACrChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CAACkB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CT,QAA5C,CAAf","sourcesContent":["import React from  'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router-dom';\r\nimport { selectCollectionFetching } from '../../redux/shop/shop.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport CollectionPage from './collection/collection.component';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewwithSpinner = withSpinner( CollectionsOverview);\r\n\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\n\r\nclass  ShopPage extends React.Component { \r\n   \r\n\r\n    componentDidMount(){\r\n        const { fetchCollectionsStartAsync} = this.props;\r\n        fetchCollectionsStartAsync();\r\n      \r\n      \r\n    }\r\n    render() { \r\n        const { match,isCollectionFetching } = this.props;\r\n\r\n        return (    \r\n    <div className='shop-page'>\r\n      \r\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewwithSpinner isLoading={isCollectionFetching} {...props}/>} />\r\n        <Route path ={ `${match.path}/:collectionId`} render={(props)=> <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} /> }/>\r\n        \r\n        \r\n    </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectCollectionFetching\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}