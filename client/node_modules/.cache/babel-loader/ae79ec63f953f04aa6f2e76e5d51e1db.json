{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/hemanth/Desktop/e-commerce/some/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/hemanth/Desktop/e-commerce/some/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/hemanth/Desktop/e-commerce/some/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyCQpP-hLdDRjJSAhEx_Ggwl9YtEz-CeHIs\",authDomain:\"crwn-db-5fe41.firebaseapp.com\",projectId:\"crwn-db-5fe41\",storageBucket:\"crwn-db-5fe41.appspot.com\",messagingSenderId:\"766052386726\",appId:\"1:766052386726:web:5aff1239bee2e56b1ab167\",measurementId:\"G-391Z8EMY3B\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,collectionRef,snapShot,collectionSnapshot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));collectionRef=firestore.collection('users');_context.next=6;return userRef.get();case 6:snapShot=_context.sent;_context.next=9;return collectionRef.get();case 9:collectionSnapshot=_context.sent;console.log({collection:collectionSnapshot.docs.map(function(doc){return doc.data();})});if(snapShot.exists){_context.next=22;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=14;_context.next=17;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](14);console.log(\"error creating user\",_context.t0.message);case 22:return _context.abrupt(\"return\",userRef);case 23:case\"end\":return _context.stop();}}},_callee,null,[[14,19]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformCollection.reduce(function(accumlator,collection){accumlator[collection.title.toLowerCase()]=collection;return accumlator;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);console.log(collectionRef);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=6;return batch.commit();case 6:return _context2.abrupt(\"return\",_context2.sent);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["C:/Users/hemanth/Desktop/e-commerce/some/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","get","snapShot","collectionSnapshot","console","log","docs","map","data","exists","displayName","email","createdAt","Date","set","message","initializeApp","convertCollectionsSnapshotToMap","collections","transformCollection","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumlator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","commit","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    \r\n    apiKey: \"AIzaSyCQpP-hLdDRjJSAhEx_Ggwl9YtEz-CeHIs\",\r\n    authDomain: \"crwn-db-5fe41.firebaseapp.com\",\r\n    projectId: \"crwn-db-5fe41\",\r\n    storageBucket: \"crwn-db-5fe41.appspot.com\",\r\n    messagingSenderId: \"766052386726\",\r\n    appId: \"1:766052386726:web:5aff1239bee2e56b1ab167\",\r\n    measurementId: \"G-391Z8EMY3B\"\r\n};\r\n\r\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const collectionRef = firestore.collection('users');\r\n    const snapShot = await userRef.get();\r\n    const collectionSnapshot = await collectionRef.get();\r\n    console.log({ collection: collectionSnapshot.docs.map(doc => doc.data())});\r\n\r\n  \r\n\r\n    if(!snapShot.exists){\r\n        const { displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            \r\n        await userRef.set({\r\n            displayName,\r\n            email,\r\n            createdAt,\r\n            ...additionalData\r\n\r\n        })}\r\n        catch (error){\r\n            console.log(\"error creating user\",error.message);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return userRef;\r\n\r\n}\r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformCollection = collections.docs.map(doc => {\r\n        const { title, items } = doc.data();\r\n\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items    }\r\n    });\r\n    return transformCollection.reduce((accumlator, collection) => {\r\n        accumlator[collection.title.toLowerCase()] = collection;\r\n        return accumlator;\r\n\r\n    },{});\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n\r\n        },reject)\r\n    })\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const addCollectionAndDocuments = async(collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    console.log(collectionRef);\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n  \r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj);\r\n\r\n    });\r\n     return await batch.commit();\r\n};\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}